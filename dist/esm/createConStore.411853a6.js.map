{"mappings":";;;;;;;;;AASe,kDAId,OAAc,EACd,OAAqC;IAErC,MAAM,YACL,WAAW,CAAA,GAAA,wCAAc,GACzB,GAAG,UACH,GAAG,WAAW,CAAC;IAChB,MAAM,eAAe,CAAA,GAAA,wCAAc,EAClC,SACA;QACC,GAAG,QAAQ;QACX,YAAY,WAAW;YACtB,WAAW;gBACV,GAAG,WAAW;gBACd,GAAG,MAAM;YACV;YACA,UAAU,OAAO,CAAE,CAAA,WAAY,SAAU;QAC1C;IACD;IAED,MAAM,aACL,SAAS,aACT,SAAS,EACT,GAAG,QACH,GAAG;IACJ,MAAM,kBAAkB;QACvB,GAAG,OAAO,GAAG,EAAE;QACf,GAAG,MAAM;IACV;IACA,IAAI,WAAW;IAIf,SAAS,eAAoD,MAAY;QACxE,MAAM,YAAY,CAAA,GAAA,cAAM,EACvB;YACC,IAAK,OAAO,WAAW,YACtB,OAAO;YAER,OAAO;QACR,GACA,uDAAuD;QACvD,EAAE;QAEH,MAAM,YAAY,CAAA,GAAA,aAAK,EAAG;QAC1B,MAAM,mBAAmB,CAAA,GAAA,kBAAU,EAClC,CAAE;YACD,MAAM,SAAS,UAAW;YAC1B,IAAK,CAAC,CAAA,GAAA,sBAAc,EAAG,UAAU,OAAO,EAAE,SACzC,UAAU,OAAO,GAAG;YAErB,OAAO,UAAU,OAAO;QACzB,GACA,uDAAuD;QACvD,EAAE;QAEH,kIAAkI;QAClI,OAAO,CAAA,GAAA,2BAAmB,EACzB,WACA,IAAM,iBAAkB,WACxB,IAAM,iBAAkB;IAE1B;IAEA,OAAO,OAAO,MAAM,CACnB,gBACA;AAEF","sources":["src/createConStore.ts"],"sourcesContent":["import { strictDeepEqual, } from 'fast-equals';\nimport { useCallback, useMemo, useRef, useSyncExternalStore, } from 'react';\nimport defaultSelector from './_internal/defaultSelector';\nimport createConSubLis from './_internal/createConSubLis';\nimport type { ActRecord, } from './types/ActRecord';\nimport type { DS, } from './types/DS';\nimport type { Selector, } from './types/Selector';\nimport type { UseEstadoProps, } from './types/UseEstadoProps';\n\nexport default function createConStore<\n\tState extends DS,\n\tActs extends ActRecord,\n>(\n\tinitial: State,\n\toptions?: UseEstadoProps<State, Acts>,\n) {\n\tconst {\n\t\tselector = defaultSelector<State, Acts>,\n\t\t..._options\n\t} = options ?? {};\n\tconst estadoSubLis = createConSubLis(\n\t\tinitial,\n\t\t{\n\t\t\t..._options,\n\t\t\tdispatcher( nextHistory, ) {\n\t\t\t\tsnapshot = {\n\t\t\t\t\t...nextHistory,\n\t\t\t\t\t...estado,\n\t\t\t\t};\n\t\t\t\tlisteners.forEach( listener => listener( snapshot, ), );\n\t\t\t},\n\t\t},\n\t);\n\tconst {\n\t\tsubscribe,\n\t\tlisteners,\n\t\t...estado\n\t} = estadoSubLis;\n\tconst initialSnapshot = {\n\t\t...estado.get(),\n\t\t...estado,\n\t};\n\tlet snapshot = initialSnapshot;\n\n\tfunction useConSelector(): ReturnType<typeof defaultSelector<State, Acts>>;\n\tfunction useConSelector<Sel extends Selector<State, Acts>,>( select: Sel ): ReturnType<Sel>;\n\tfunction useConSelector<Sel extends Selector<State, Acts>,>( select?: Sel, ) {\n\t\tconst _selector = useMemo(\n\t\t\t() => {\n\t\t\t\tif ( typeof select === 'function' ) {\n\t\t\t\t\treturn select;\n\t\t\t\t}\n\t\t\t\treturn selector;\n\t\t\t},\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t[],\n\t\t);\n\t\tconst resultRef = useRef( null as ReturnType<typeof _selector>, );\n\t\tconst selectorCallback = useCallback(\n\t\t\t( snapshot: typeof initialSnapshot, ) => {\n\t\t\t\tconst result = _selector( snapshot, );\n\t\t\t\tif ( !strictDeepEqual( resultRef.current, result, ) ) {\n\t\t\t\t\tresultRef.current = result as ReturnType<typeof _selector>;\n\t\t\t\t}\n\t\t\t\treturn resultRef.current;\n\t\t\t},\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\t[],\n\t\t);\n\t\t// @see {@link https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js}\n\t\treturn useSyncExternalStore(\n\t\t\tsubscribe,\n\t\t\t() => selectorCallback( snapshot, ),\n\t\t\t() => selectorCallback( initialSnapshot, ),\n\t\t);\n\t}\n\n\treturn Object.assign(\n\t\tuseConSelector,\n\t\testado,\n\t);\n}\n"],"names":[],"version":3,"file":"createConStore.411853a6.js.map"}